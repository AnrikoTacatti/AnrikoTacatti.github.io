/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:"Robotolight";src:url("../fonts/roboto/name.woff2") format("woff2"),url("../fonts/roboto/Robotolight.woff") format("woff"),url("../fonts/roboto/Robotolight.ttf") format("ttf");font-weight:300;font-style:normal}@font-face{font-family:"RobotoRegular";src:url("../fonts/roboto/name.woff2") format("woff2"),url("../fonts/roboto/RobotoRegular.woff") format("woff"),url("../fonts/roboto/RobotoRegular.ttf") format("ttf");font-weight:400;font-style:normal}@font-face{font-family:"Robotothin";src:url("../fonts/roboto/name.woff2") format("woff2"),url("../fonts/roboto/Robotothin.woff") format("woff"),url("../fonts/roboto/Robotothin.ttf") format("ttf");font-weight:400;font-style:normal}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{background:#fff;color:#000;font-family:"Robotolight",sans-serif;font-size:16px;font-weight:300;overflow-x:hidden}.section-title{font-family:"Robotolight",sans-serif;font-size:30px;color:#1c1c1c;text-align:center;margin-top:30px;margin-bottom:20px}p{margin:auto}.wrap{-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:1200px;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;margin-left:auto;margin-right:auto}.header__top{z-index:1;position:relative}.header__hamburger{display:none;position:relative;height:42px;width:42px;padding:5px;overflow:hidden;z-index:100;display:none;margin:15px 15px 15px auto;margin-left:auto;margin-right:15px;margin-top:15px;cursor:pointer;background:transparent;border-color:transparent}.header__hamburger:hover{background-color:#f0f0f0}.header__hamburger span{position:absolute;height:2px;right:7px;left:7px;background-color:#000;border:0}.header__hamburger-top{top:25%;margin-top:-1px}.header__hamburger-middle{top:50%;margin-top:-1px}.header__hamburger-bottom{top:75%;margin-top:-1px}.header__nav{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:80px}.header__nav-link{margin-left:37px;margin-right:37px;font-family:"Robotolight",sans-serif;font-size:14px;color:#1c1c1c;text-align:center;cursor:pointer}.header__nav-link:active{color:#708ab5}.header__content{background-image:url(../img/header-bg.png);background-repeat:no-repeat;padding-bottom:60px;background-size:contain;background-position:top center}.header__content-title{font-size:70px;font-weight:400;color:#000;text-align:center;font-family:"Robotothin",sans-serif;margin-top:11vw;width:100%}@media screen and (max-width: 1201px){.header{position:relative}.header__content-title{margin-top:9.5vw}}@media screen and (max-width: 911px){section{padding:0 15px}}@media screen and (max-width: 768px){.header__hamburger{display:block}.header__nav{position:absolute;height:auto;top:70px;background:#fff;padding-bottom:15px;display:none}.header__nav-link{margin-top:15px;margin-bottom:15px;width:100%;display:inline-block;margin-left:0}}@media screen and (max-width: 480px){.header__content{background-size:auto 100px}}a{color:inherit;text-decoration:none;cursor:pointer;color:#708ab5}a:hover,a:focus,a:active{cursor:pointer;text-decoration:none;color:inherit;outline:none}a:hover{color:#ad0303}a:active{color:#1c1c1c}a:focus{color:#000}input,button{outline:none}ul{list-style:none;padding-left:0}b,strong{font-weight:600}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
